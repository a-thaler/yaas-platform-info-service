worker_processes  1;
#daemon            off;

env DEBUG_EXTERNAL_URL;
env DEBUG_HOST_ADDR;

load_module modules/ngx_http_lua_module.so;
load_module modules/ngx_http_echo_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_geoip_module.so;

error_log stderr debug; #notice;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
    access_log /dev/stdout cloudfoundry;

    server_tokens      off;
    keepalive_timeout  30;
    port_in_redirect   off; # Ensure that redirects don't include the internal container PORT
    tcp_nopush         on;
    sendfile           on;
    gzip               on;

 	geoip_country  /etc/nginx/geoip/GeoIP-Country.dat;
	geoip_city     /etc/nginx/geoip/GeoIP-City.dat;

    include        /var/nginx/config/timezone.conf;

    map $uri $basename {
        ~/(?<captured_basename>[^/]*)$ $captured_basename;
    }

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '/var/nginx/lua/?.lua;/var/nginx/lua/?/init.lua;/usr/lib/lua/5.1/?.lua;/usr/lib/lua/5.1/?/init.lua;;';

    # set search paths for Lua external libraries written in C (can also use ';;'):
    lua_package_cpath '/usr/lib/lua/5.1/?.so;;';

    # turn only off for devlopment and debugging purpose
    lua_code_cache  on;

    lua_shared_dict cache 5m;

    init_by_lua_file /var/nginx/lua/init.lua;

    server {
        set         $folder '/var/nginx';

        listen      80;
        server_name localhost;
        root        $folder;

	    set_real_ip_from  10.0.0.0/8;
        set_real_ip_from  127.0.0.1;
	    real_ip_header    X-Forwarded-For;
        real_ip_recursive on;

        add_header Cache-Control no-cache;
        add_header Access-Control-Allow-Origin *;
        charset utf-8;
        default_type 'application/json';

        # header info
        location =/header {
            charset off;
            default_type text/plain;

            echo $echo_client_request_headers;
        }

        # info redirect for ip adresses via request query parameter
        location ~ /info/?(?<ip>.*) {
            if ($ip = "") {
                set $ip $remote_addr;
            }
            if ($ip !~ '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$') {
                return 400;
            }

            proxy_set_header X-Forwarded-For $ip;
            proxy_set_header Host $host;
            proxy_set_header X-Request-For $request;
            proxy_pass $scheme://127.0.0.1/info;
        }

        # info / GEO ip detection
        location = /info {
            if ($http_x_request_for) {
                access_log off;
            }
            content_by_lua_file $folder/lua/info.lua;
        }

        # email check
        location /email/ {
            resolver 8.8.8.8; # use google as dns
            content_by_lua_file $folder/lua/email.lua;
        }

        # vatin check
        location /vatin/ {
            resolver 8.8.8.8; # use google as dns
            content_by_lua_file $folder/lua/vatin.lua;
        }

        # timezone info
        location /timezone/ {
            content_by_lua_file $folder/lua/timezone.lua;
        }


        # networks info
        location /networks {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/networks_overview.lua;
        }

        # networks info
        location /networks/ {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/networks.lua;
        }

        # regions
        location = /regions {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/regions_collection.lua;
        }
        location /regions/ {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/region_entity.lua;
        }

        # markets
        location = /markets {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/markets_collection.lua;
        }
        location /markets/ {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/market_entity.lua;
        }

        # vendors
        location = /vendors {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/vendors_collection.lua;
        }
        location /vendors/ {
            add_header Cache-Control "public";
            expires 1h;
            content_by_lua_file $folder/lua/vendor_entity.lua;
        }

        # country market mapping
        location =/mapping {
            internal;
            content_by_lua_file $folder/lua/mapping.lua;
        }

        # platform access definition
        location =/access {
            internal;
            content_by_lua_file $folder/lua/access.lua;
        }

        # raw data files
        location /data/ {
            internal;
            try_files $uri $uri.json;
        }

        # api console
        location = /api-console {
            rewrite_by_lua "return ngx.redirect(require('utils').base_url()..ngx.var.request_uri..'/')";
        }
        location ~ ^/api-console/(.*)$ {
            index index.html;
            alias $folder/assets/api-console/$1;
        }

        # data console
        location = /data-console {
            rewrite_by_lua "return ngx.redirect(require('utils').base_url()..ngx.var.request_uri..'/')";
        }
        location ~ ^/data-console/(.*)$ {
            index index.html;
            alias $folder/assets/data-console/$1;
        }

        # API meta data (RAML, JSON schema, ...)
        location /meta-data/ {
            add_header Cache-Control "public";
            expires 1h;
            default_type 'application/yaml';
            try_files /meta/$basename /meta/$basename.raml;
        }
        location /meta-data/schemata/ {
            add_header Cache-Control "public";
            expires 1h;
            default_type 'application/json';
            try_files /meta/schemata/$basename /meta/schemata/$basename.json;
        }
        location /meta-data/examples/ {
            add_header Cache-Control "public";
            expires 1h;
            default_type 'application/json';
            try_files /meta/examples/$basename /meta/examples/$basename.json;
        }

#        error_page 403 404 405 @40x;
#        location @40x {
#            try_files /etc/nginx/data/yaas.json =405;
#        }
#        error_page 500 502 503 504 =500 @50x;
#        location @50x {
#            try_files 50x.json =500;
#        }
    }
}